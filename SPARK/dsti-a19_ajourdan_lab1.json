{"paragraphs":[{"text":"%spark2.pyspark\n\nrdd1 = sc.parallelize([1,2,3,4])\nrdd1.collect()","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T13:46:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[1, 2, 3, 4]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=1"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1584366321805_1573912856","id":"20200316-134521_1682186606","dateCreated":"2020-03-16T13:45:21+0000","dateStarted":"2020-03-16T13:46:36+0000","dateFinished":"2020-03-16T13:46:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1464"},{"text":"%spark2.pyspark\nrdd_double = rdd1.map( lambda v: v*2 )\nrdd_double.collect()","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T13:48:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[2, 4, 6, 8]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=2"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1584366378669_631591480","id":"20200316-134618_1247867990","dateCreated":"2020-03-16T13:46:18+0000","dateStarted":"2020-03-16T13:48:23+0000","dateFinished":"2020-03-16T13:48:24+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1465"},{"text":"%md\n### ReduceByKey","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:47:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>ReduceByKey</h3>\n"}]},"apps":[],"jobName":"paragraph_1584366837285_-724441472","id":"20200316-135357_1092888580","dateCreated":"2020-03-16T13:53:57+0000","dateStarted":"2020-03-16T14:47:27+0000","dateFinished":"2020-03-16T14:47:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1466"},{"text":"%spark2.pyspark\nrdd_kv = sc.parallelize([(\"alice\",1),(\"alice\",1),(\"rabbit\",1),(\"alice\",2)])\n\nrdd_sum = rdd_kv.reduceByKey( lambda a,b: a+b)\nrdd_sum.collect()","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T13:56:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[('rabbit', 1), ('alice', 4)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=4"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1584366503830_1250240906","id":"20200316-134823_1702504165","dateCreated":"2020-03-16T13:48:23+0000","dateStarted":"2020-03-16T13:56:32+0000","dateFinished":"2020-03-16T13:56:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1467"},{"text":"%md\n### Lab: Shop revenues analysis","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:08:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Lab: Shop revenues analysis</h3>\n"}]},"apps":[],"jobName":"paragraph_1584367021108_1691727995","id":"20200316-135701_344067888","dateCreated":"2020-03-16T13:57:01+0000","dateStarted":"2020-03-16T14:08:23+0000","dateFinished":"2020-03-16T14:08:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1468"},{"text":"%spark2.pyspark\nrdd = sc.wholeTextFiles('/learning/data/city_revenue')\nrdd.take(2)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:07:11+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'hdfs://hdfs-nn-1.au.adaltas.cloud:8020/learning/data/city_revenue/anger.txt', u'JAN 13\\r\\nFEB 12\\r\\nMAR 14\\r\\nAPR 15\\r\\nMAY 12\\r\\nJUN 15\\r\\nJUL 19\\r\\nAUG 15\\r\\nSEP 13\\r\\nOCT 8\\r\\nNOV 14\\r\\nDEC 16'), (u'hdfs://hdfs-nn-1.au.adaltas.cloud:8020/learning/data/city_revenue/lyon.txt', u'JAN 13\\r\\nFEB 12\\r\\nMAR 14\\r\\nAPR 15\\r\\nMAY 12\\r\\nJUN 15\\r\\nJUL 19\\r\\nAUG 25\\r\\nSEP 13\\r\\nOCT 11\\r\\nNOV 22\\r\\nDEC 22')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=5"],"interpreterSettingId":"spark2"}},"apps":[],"jobName":"paragraph_1584367580614_504222070","id":"20200316-140620_673917416","dateCreated":"2020-03-16T14:06:20+0000","dateStarted":"2020-03-16T14:07:11+0000","dateFinished":"2020-03-16T14:07:12+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1469"},{"text":"%md\n### 1) Transform this rdd to get a rdd with format (city, store, month, revenue)\n\nTo begin with, we have a key value RDD with (key=HDFS path, value=file content)\n-> transform this rdd to get a rdd with format (city,store,month,revenue)\nexample: \n(\"Paris\",\"Paris_2\",\"JAN\",43)\n(\"Paris\",\"Paris_2\",\"FEB\",42)\nand so on\n\nUseful functions: `map`, `flatMap`, `flatMapValues`","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:35:06+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>1) Transform this rdd to get a rdd with format (city, store, month, revenue)</h3>\n<p>To begin with, we have a key value RDD with (key=HDFS path, value=file content)\n<br  />-> transform this rdd to get a rdd with format (city,store,month,revenue)\n<br  />example:\n<br  />(&ldquo;Paris&rdquo;,&ldquo;Paris_2&rdquo;,&ldquo;JAN&rdquo;,43)\n<br  />(&ldquo;Paris&rdquo;,&ldquo;Paris_2&rdquo;,&ldquo;FEB&rdquo;,42)\n<br  />and so on</p>\n<p>Useful functions: <code>map</code>, <code>flatMap</code>, <code>flatMapValues</code></p>\n"}]},"apps":[],"jobName":"paragraph_1584367631049_422764830","id":"20200316-140711_1861961047","dateCreated":"2020-03-16T14:07:11+0000","dateStarted":"2020-03-16T14:35:06+0000","dateFinished":"2020-03-16T14:35:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1470"},{"text":"%spark2.pyspark\nrdd_split = rdd.map(lambda x: (x[0].split('/')[-1],x[1].split('\\r\\n')))\nrdd_split.take(5)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:45:49+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584367667516_914164294","id":"20200316-140747_503894844","dateCreated":"2020-03-16T14:07:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1471","dateFinished":"2020-03-16T14:45:49+0000","dateStarted":"2020-03-16T14:45:49+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'anger.txt', [u'JAN 13', u'FEB 12', u'MAR 14', u'APR 15', u'MAY 12', u'JUN 15', u'JUL 19', u'AUG 15', u'SEP 13', u'OCT 8', u'NOV 14', u'DEC 16']), (u'lyon.txt', [u'JAN 13', u'FEB 12', u'MAR 14', u'APR 15', u'MAY 12', u'JUN 15', u'JUL 19', u'AUG 25', u'SEP 13', u'OCT 11', u'NOV 22', u'DEC 22']), (u'marseilles_1.txt', [u'JAN 21', u'FEB 21', u'MAR 21', u'APR 27', u'MAY 25', u'JUN 25', u'JUL 21', u'AUG 22', u'SEP 23', u'OCT 28', u'NOV 24', u'DEC 26']), (u'nantes.txt', [u'JAN 16', u'FEB 15', u'MAR 20', u'APR 12', u'MAY 21', u'JUN 28', u'JUL 19', u'AUG 11', u'SEP 13', u'OCT 14', u'NOV 14', u'DEC 24']), (u'nice.txt', [u'JAN 16', u'FEB 15', u'MAR 20', u'APR 9', u'MAY 11', u'JUN 18', u'JUL 19', u'AUG 11', u'SEP 23', u'OCT 18', u'NOV 14', u'DEC 29'])]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=46"],"interpreterSettingId":"spark2"}}},{"text":"%spark2.pyspark\nrdd_flat = rdd_split.flatMapValues(lambda x: x)\nrdd_flat.take(5)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:45:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584367667989_1488341331","id":"20200316-140747_2087500781","dateCreated":"2020-03-16T14:07:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1472","dateFinished":"2020-03-16T14:45:52+0000","dateStarted":"2020-03-16T14:45:52+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'anger.txt', u'JAN 13'), (u'anger.txt', u'FEB 12'), (u'anger.txt', u'MAR 14'), (u'anger.txt', u'APR 15'), (u'anger.txt', u'MAY 12')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=47"],"interpreterSettingId":"spark2"}}},{"text":"%spark2.pyspark\nrdd_split2 = rdd_flat.map(lambda x: (x[0].split('.')[0],x[1].split(' ')))\nrdd_split2.take(5)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:45:54+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584367668232_724998605","id":"20200316-140748_1510145033","dateCreated":"2020-03-16T14:07:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1473","dateFinished":"2020-03-16T14:45:55+0000","dateStarted":"2020-03-16T14:45:54+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'anger', [u'JAN', u'13']), (u'anger', [u'FEB', u'12']), (u'anger', [u'MAR', u'14']), (u'anger', [u'APR', u'15']), (u'anger', [u'MAY', u'12'])]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=48"],"interpreterSettingId":"spark2"}}},{"text":"%spark2.pyspark\nrdd_final = rdd_split2.map(lambda x: (x[0],x[1][0],x[1][1]))\nrdd_final.take(10)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:45:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584367668704_-1271290911","id":"20200316-140748_775826182","dateCreated":"2020-03-16T14:07:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1474","dateFinished":"2020-03-16T14:45:56+0000","dateStarted":"2020-03-16T14:45:56+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'anger', u'JAN', u'13'), (u'anger', u'FEB', u'12'), (u'anger', u'MAR', u'14'), (u'anger', u'APR', u'15'), (u'anger', u'MAY', u'12'), (u'anger', u'JUN', u'15'), (u'anger', u'JUL', u'19'), (u'anger', u'AUG', u'15'), (u'anger', u'SEP', u'13'), (u'anger', u'OCT', u'8')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=49"],"interpreterSettingId":"spark2"}}},{"text":"%spark2.pyspark\n\ndef f(x):\n    if '_' in x[0]:\n        a = x[0].split('_')[0] \n        b = x[0] \n    else: \n        a = x[0]\n        b = x[0]\n    return (a,b,x[1],x[2])\n\nrdd_final2 = rdd_final.map(f)\nrdd_final2.collect()","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:45:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584367667893_1140380582","id":"20200316-140747_665657672","dateCreated":"2020-03-16T14:07:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1475","dateFinished":"2020-03-16T14:45:57+0000","dateStarted":"2020-03-16T14:45:57+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'anger', u'anger', u'JAN', u'13'), (u'anger', u'anger', u'FEB', u'12'), (u'anger', u'anger', u'MAR', u'14'), (u'anger', u'anger', u'APR', u'15'), (u'anger', u'anger', u'MAY', u'12'), (u'anger', u'anger', u'JUN', u'15'), (u'anger', u'anger', u'JUL', u'19'), (u'anger', u'anger', u'AUG', u'15'), (u'anger', u'anger', u'SEP', u'13'), (u'anger', u'anger', u'OCT', u'8'), (u'anger', u'anger', u'NOV', u'14'), (u'anger', u'anger', u'DEC', u'16'), (u'lyon', u'lyon', u'JAN', u'13'), (u'lyon', u'lyon', u'FEB', u'12'), (u'lyon', u'lyon', u'MAR', u'14'), (u'lyon', u'lyon', u'APR', u'15'), (u'lyon', u'lyon', u'MAY', u'12'), (u'lyon', u'lyon', u'JUN', u'15'), (u'lyon', u'lyon', u'JUL', u'19'), (u'lyon', u'lyon', u'AUG', u'25'), (u'lyon', u'lyon', u'SEP', u'13'), (u'lyon', u'lyon', u'OCT', u'11'), (u'lyon', u'lyon', u'NOV', u'22'), (u'lyon', u'lyon', u'DEC', u'22'), (u'marseilles', u'marseilles_1', u'JAN', u'21'), (u'marseilles', u'marseilles_1', u'FEB', u'21'), (u'marseilles', u'marseilles_1', u'MAR', u'21'), (u'marseilles', u'marseilles_1', u'APR', u'27'), (u'marseilles', u'marseilles_1', u'MAY', u'25'), (u'marseilles', u'marseilles_1', u'JUN', u'25'), (u'marseilles', u'marseilles_1', u'JUL', u'21'), (u'marseilles', u'marseilles_1', u'AUG', u'22'), (u'marseilles', u'marseilles_1', u'SEP', u'23'), (u'marseilles', u'marseilles_1', u'OCT', u'28'), (u'marseilles', u'marseilles_1', u'NOV', u'24'), (u'marseilles', u'marseilles_1', u'DEC', u'26'), (u'nantes', u'nantes', u'JAN', u'16'), (u'nantes', u'nantes', u'FEB', u'15'), (u'nantes', u'nantes', u'MAR', u'20'), (u'nantes', u'nantes', u'APR', u'12'), (u'nantes', u'nantes', u'MAY', u'21'), (u'nantes', u'nantes', u'JUN', u'28'), (u'nantes', u'nantes', u'JUL', u'19'), (u'nantes', u'nantes', u'AUG', u'11'), (u'nantes', u'nantes', u'SEP', u'13'), (u'nantes', u'nantes', u'OCT', u'14'), (u'nantes', u'nantes', u'NOV', u'14'), (u'nantes', u'nantes', u'DEC', u'24'), (u'nice', u'nice', u'JAN', u'16'), (u'nice', u'nice', u'FEB', u'15'), (u'nice', u'nice', u'MAR', u'20'), (u'nice', u'nice', u'APR', u'9'), (u'nice', u'nice', u'MAY', u'11'), (u'nice', u'nice', u'JUN', u'18'), (u'nice', u'nice', u'JUL', u'19'), (u'nice', u'nice', u'AUG', u'11'), (u'nice', u'nice', u'SEP', u'23'), (u'nice', u'nice', u'OCT', u'18'), (u'nice', u'nice', u'NOV', u'14'), (u'nice', u'nice', u'DEC', u'29'), (u'orlean', u'orlean', u'JAN', u'13'), (u'orlean', u'orlean', u'FEB', u'12'), (u'orlean', u'orlean', u'MAR', u'14'), (u'orlean', u'orlean', u'APR', u'15'), (u'orlean', u'orlean', u'MAY', u'12'), (u'orlean', u'orlean', u'JUN', u'15'), (u'orlean', u'orlean', u'JUL', u'19'), (u'orlean', u'orlean', u'AUG', u'25'), (u'orlean', u'orlean', u'SEP', u'13'), (u'orlean', u'orlean', u'OCT', u'8'), (u'orlean', u'orlean', u'NOV', u'24'), (u'orlean', u'orlean', u'DEC', u'26'), (u'paris', u'paris_2', u'JAN', u'43'), (u'paris', u'paris_2', u'FEB', u'42'), (u'paris', u'paris_2', u'MAR', u'44'), (u'paris', u'paris_2', u'APR', u'35'), (u'paris', u'paris_2', u'MAY', u'72'), (u'paris', u'paris_2', u'JUN', u'85'), (u'paris', u'paris_2', u'JUL', u'19'), (u'paris', u'paris_2', u'AUG', u'45'), (u'paris', u'paris_2', u'SEP', u'63'), (u'paris', u'paris_2', u'OCT', u'64'), (u'paris', u'paris_2', u'NOV', u'64'), (u'paris', u'paris_2', u'DEC', u'66'), (u'marseilles', u'marseilles_2', u'JAN', u'11'), (u'marseilles', u'marseilles_2', u'FEB', u'11'), (u'marseilles', u'marseilles_2', u'MAR', u'11'), (u'marseilles', u'marseilles_2', u'APR', u'17'), (u'marseilles', u'marseilles_2', u'MAY', u'12'), (u'marseilles', u'marseilles_2', u'JUN', u'25'), (u'marseilles', u'marseilles_2', u'JUL', u'21'), (u'marseilles', u'marseilles_2', u'AUG', u'22'), (u'marseilles', u'marseilles_2', u'SEP', u'23'), (u'marseilles', u'marseilles_2', u'OCT', u'28'), (u'marseilles', u'marseilles_2', u'NOV', u'24'), (u'marseilles', u'marseilles_2', u'DEC', u'26'), (u'paris', u'paris_1', u'JAN', u'51'), (u'paris', u'paris_1', u'FEB', u'21'), (u'paris', u'paris_1', u'MAR', u'11'), (u'paris', u'paris_1', u'APR', u'57'), (u'paris', u'paris_1', u'MAY', u'55'), (u'paris', u'paris_1', u'JUN', u'55'), (u'paris', u'paris_1', u'JUL', u'61'), (u'paris', u'paris_1', u'AUG', u'42'), (u'paris', u'paris_1', u'SEP', u'43'), (u'paris', u'paris_1', u'OCT', u'68'), (u'paris', u'paris_1', u'NOV', u'61'), (u'paris', u'paris_1', u'DEC', u'71'), (u'paris', u'paris_3', u'JAN', u'21'), (u'paris', u'paris_3', u'FEB', u'36'), (u'paris', u'paris_3', u'MAR', u'24'), (u'paris', u'paris_3', u'APR', u'24'), (u'paris', u'paris_3', u'MAY', u'23'), (u'paris', u'paris_3', u'JUN', u'25'), (u'paris', u'paris_3', u'JUL', u'21'), (u'paris', u'paris_3', u'AUG', u'38'), (u'paris', u'paris_3', u'SEP', u'38'), (u'paris', u'paris_3', u'OCT', u'38'), (u'paris', u'paris_3', u'NOV', u'21'), (u'paris', u'paris_3', u'DEC', u'21'), (u'rennes', u'rennes', u'JAN', u'19'), (u'rennes', u'rennes', u'FEB', u'18'), (u'rennes', u'rennes', u'MAR', u'10'), (u'rennes', u'rennes', u'APR', u'9'), (u'rennes', u'rennes', u'MAY', u'11'), (u'rennes', u'rennes', u'JUN', u'13'), (u'rennes', u'rennes', u'JUL', u'14'), (u'rennes', u'rennes', u'AUG', u'11'), (u'rennes', u'rennes', u'SEP', u'23'), (u'rennes', u'rennes', u'OCT', u'18'), (u'rennes', u'rennes', u'NOV', u'14'), (u'rennes', u'rennes', u'DEC', u'20'), (u'toulouse', u'toulouse', u'JAN', u'12'), (u'toulouse', u'toulouse', u'FEB', u'13'), (u'toulouse', u'toulouse', u'MAR', u'14'), (u'toulouse', u'toulouse', u'APR', u'11'), (u'toulouse', u'toulouse', u'MAY', u'11'), (u'toulouse', u'toulouse', u'JUN', u'18'), (u'toulouse', u'toulouse', u'JUL', u'19'), (u'toulouse', u'toulouse', u'AUG', u'11'), (u'toulouse', u'toulouse', u'SEP', u'23'), (u'toulouse', u'toulouse', u'OCT', u'14'), (u'toulouse', u'toulouse', u'NOV', u'12'), (u'toulouse', u'toulouse', u'DEC', u'19'), (u'troyes', u'troyes', u'JAN', u'21'), (u'troyes', u'troyes', u'FEB', u'21'), (u'troyes', u'troyes', u'MAR', u'11'), (u'troyes', u'troyes', u'APR', u'17'), (u'troyes', u'troyes', u'MAY', u'15'), (u'troyes', u'troyes', u'JUN', u'25'), (u'troyes', u'troyes', u'JUL', u'11'), (u'troyes', u'troyes', u'AUG', u'22'), (u'troyes', u'troyes', u'SEP', u'21'), (u'troyes', u'troyes', u'OCT', u'28'), (u'troyes', u'troyes', u'NOV', u'11'), (u'troyes', u'troyes', u'DEC', u'11')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=50"],"interpreterSettingId":"spark2"}}},{"text":"%md\n### 2) Average per month of the the shop (all stores combined)\nSum of all the stores revenue divided by 12.","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:34:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584368755354_634862836","id":"20200316-142555_820838695","dateCreated":"2020-03-16T14:25:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3113","dateFinished":"2020-03-16T14:34:45+0000","dateStarted":"2020-03-16T14:34:45+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>2) Average per month of the the shop (all stores combined)</h3>\n<p>Sum of all the stores revenue divided by 12.</p>\n"}]}},{"text":"%spark2.pyspark\nfrom operator import add\nred_2 = rdd_final2.map(lambda x: int(x[3])).reduce(add)/12\nred_2","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:46:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369266690_-422168647","id":"20200316-143426_1727776067","dateCreated":"2020-03-16T14:34:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3545","dateFinished":"2020-03-16T14:46:00+0000","dateStarted":"2020-03-16T14:46:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"301\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=51"],"interpreterSettingId":"spark2"}}},{"text":"%md\n### 3) Total revenue per city for the year\nSum of all the revenue for each city.","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:35:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369266933_-2073145681","id":"20200316-143426_104349017","dateCreated":"2020-03-16T14:34:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3617","dateFinished":"2020-03-16T14:35:32+0000","dateStarted":"2020-03-16T14:35:32+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>3) Total revenue per city for the year</h3>\n<p>Sum of all the revenue for each city.</p>\n"}]}},{"text":"%spark2.pyspark\nfrom operator import add\nred_2 = rdd_final2.map(lambda x: (x[0],int(x[3]))).reduceByKey(add)\nred_2.take(10)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:46:14+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369267106_-712875706","id":"20200316-143427_25098251","dateCreated":"2020-03-16T14:34:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3689","dateFinished":"2020-03-16T14:46:14+0000","dateStarted":"2020-03-16T14:46:14+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'paris', 1568), (u'troyes', 214), (u'lyon', 193), (u'toulouse', 177), (u'anger', 166), (u'orlean', 196), (u'rennes', 180), (u'nice', 203), (u'nantes', 207), (u'marseilles', 515)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=52","http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=53"],"interpreterSettingId":"spark2"}}},{"text":"%md\n### 4) Average per month per city (on this 1 year data)\nLike question 3 but devided by 12.","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:46:15+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369267278_502768941","id":"20200316-143427_716724108","dateCreated":"2020-03-16T14:34:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3761","dateFinished":"2020-03-16T14:46:15+0000","dateStarted":"2020-03-16T14:46:15+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>4) Average per month per city (on this 1 year data)</h3>\n<p>Like question 3 but devided by 12.</p>\n"}]}},{"text":"%spark2.pyspark\nfrom operator import add\nred_2 = rdd_final2.map(lambda x: (x[0],float(x[3])/12)).reduceByKey(add)\nred_2.take(10)","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:46:18+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369335819_-1275023048","id":"20200316-143535_888882357","dateCreated":"2020-03-16T14:35:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3891","dateFinished":"2020-03-16T14:46:18+0000","dateStarted":"2020-03-16T14:46:18+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'paris', 130.66666666666669), (u'troyes', 17.833333333333336), (u'lyon', 16.083333333333336), (u'toulouse', 14.75), (u'anger', 13.833333333333334), (u'orlean', 16.333333333333336), (u'rennes', 14.999999999999998), (u'nice', 16.916666666666664), (u'nantes', 17.25), (u'marseilles', 42.91666666666667)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=54","http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=55"],"interpreterSettingId":"spark2"}}},{"text":"%md\n### 5) Total revenue per store on the year\nSum of all the revenue per store.","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:36:12+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369335992_-864361340","id":"20200316-143535_1348483480","dateCreated":"2020-03-16T14:35:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3963","dateFinished":"2020-03-16T14:36:12+0000","dateStarted":"2020-03-16T14:36:12+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>5) Total revenue per store on the year</h3>\n<p>Sum of all the revenue per store.</p>\n"}]}},{"text":"%spark2.pyspark\nfrom operator import add\nred_2 = rdd_final2.map(lambda x: (x[1],int(x[3]))).reduceByKey(add)\nred_2.collect()","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:48:27+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369336142_1734335551","id":"20200316-143536_494495400","dateCreated":"2020-03-16T14:35:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4035","dateFinished":"2020-03-16T14:48:28+0000","dateStarted":"2020-03-16T14:48:27+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'troyes', 214), (u'lyon', 193), (u'toulouse', 177), (u'marseilles_2', 231), (u'anger', 166), (u'paris_3', 330), (u'paris_1', 596), (u'orlean', 196), (u'marseilles_1', 284), (u'rennes', 180), (u'nice', 203), (u'paris_2', 642), (u'nantes', 207)]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=58"],"interpreterSettingId":"spark2"}}},{"text":"%md\n### 6) For each month, best store (most revenue)\nGet the store with highest revenue each month. Hint: this can be done with a reduceByKey.","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:36:32+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369336311_-582179367","id":"20200316-143536_1320223046","dateCreated":"2020-03-16T14:35:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4107","dateFinished":"2020-03-16T14:36:32+0000","dateStarted":"2020-03-16T14:36:32+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>6) For each month, best store (most revenue)</h3>\n<p>Get the store with highest revenue each month. Hint: this can be done with a reduceByKey.</p>\n"}]}},{"text":"%spark2.pyspark\n\ndef f(x,y):\n    print(x[1])\n    if x[1] > y[1]:\n        best = x\n    else:\n        best = y\n    return best\n    \nred_2 = rdd_final2.map(lambda x: (x[2],[x[1],int(x[3])])).reduceByKey(f).map(lambda x: (x[0],x[1][0]))\nred_2.collect()","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T15:06:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369336622_-1912395542","id":"20200316-143536_1544691852","dateCreated":"2020-03-16T14:35:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4251","dateFinished":"2020-03-16T15:06:00+0000","dateStarted":"2020-03-16T15:06:00+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"[(u'FEB', u'paris_2'), (u'AUG', u'paris_2'), (u'APR', u'paris_1'), (u'JUN', u'paris_2'), (u'JUL', u'paris_1'), (u'JAN', u'paris_1'), (u'MAY', u'paris_2'), (u'NOV', u'paris_2'), (u'MAR', u'paris_2'), (u'DEC', u'paris_1'), (u'OCT', u'paris_1'), (u'SEP', u'paris_2')]\n"}]},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://wrk-2.au.adaltas.cloud:40135/jobs/job?id=64"],"interpreterSettingId":"spark2"}}},{"text":"%spark2.pyspark\n","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:35:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369336475_-1112533582","id":"20200316-143536_1187690047","dateCreated":"2020-03-16T14:35:36+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4179"},{"text":"%spark2.pyspark\n","user":"a.jourdan-dsti","dateUpdated":"2020-03-16T14:35:36+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1584369336800_-479070078","id":"20200316-143536_597740609","dateCreated":"2020-03-16T14:35:36+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4323"}],"name":"dsti-a19/ajourdan/lab1","id":"2F33MSGTW","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"angular:shared_process":[],"spark2:a.jourdan-dsti:":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}